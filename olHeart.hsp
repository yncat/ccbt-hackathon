#include "bsplay.as"
#include "ovplay.as"
#include "kernel32.as"
#include "user32.as"

#packopt name "ol_heart"

#module alreadyRunningChecker;---------アプリケーションの起動チェックを行うモジュール----------
#define ERROR_ALREADY_EXISTS    183
; ミューテックスオブジェクトの名前の定義
#define global MUTEX_NAME  "MAHOUSHOUJOAZUSA"
; このアプリケーションがすでに起動されているかどうかを取得する関数
#defcfunc AlreadyRunning
if (hMutex == 0) {
; 名前付きミューテックスオブジェクトの作成
hMutex = CreateMutex(0, 0, MUTEX_NAME)
; オブジェクトがすでに作成されていたかどうかの判別
if (GetLastError() == ERROR_ALREADY_EXISTS) {
; すでに同じ名前のオブジェクトが存在する
alreadyRunningStatus = 1
} else {
; オブジェクトが新しく作成された
alreadyRunningStatus = 0
}
}
return alreadyRunningStatus

; クリーンアップ処理（終了時に自動実行）
#deffunc CleanupAppRunChecker onexit
if (hMutex != 0) {
; ミューテックスオブジェクトハンドルのクローズ
CloseHandle hMutex
hMutex = 0
}
return
#global ;------------------------モジュール終わり-------------------------

#module
#defcfunc getFreeBassBuffer
found = -1
repeat 50
if _bs_getstatus(cnt) == 0: found = cnt: break
loop
return found
#global

if alreadyRunning() {
  goto*cmdtransfer
}

windowTitle = "OL Heart!"
title windowTitle

windowHandle = hwnd
bsave "hwnd.tmp", windowHandle

onexit *exit
bs_init 44100, 16, 1, 128
ov_init 44100, 2, 16, 128
ov_load "fx\\theme_loop.ogg", 0, gf_bgm
ov_load "fx\\start2.ogg", 1, GF_SE
ov_load "fx\\ready.wav", 2, gf_se
// 3: girl
ov_load "fx\\office.ogg", 4, GF_BGM

oncmd gosub *transferred,0x004A	//WM_COPYDATA

*mainloop
await 16
if transfer: gosub*transferMain
goto *mainloop

*transferMain
spacePos = instr(final_data, 0, " ")
if spacePos == -1: {
  command = final_data
  parameter = ""
}else{
  command = strmid(final_data, 0, spacePos)
  parameter = strmid(final_data, spacePos + 1, 10000)
}
transfer = 0
switch command
case "playoneshot":
gosub *event_playoneshot
swbreak
case "girl":
gosub *event_girl
swbreak
case "playtheme":
gosub *event_playtheme
swbreak
case "stoptheme"
gosub*event_stoptheme
swbreak
case "fadeouttheme"
gosub*event_fadeouttheme
swbreak
case "costumed"
gosub*event_costumed
swbreak
case "playoffice"
gosub*event_playoffice
swbreak
case "fadeoutoffice"
gosub*event_fadeoutoffice
swbreak
case "charged"
ov_play 2
swbreak
case "chargestopwith"
gosub*event_chargestopwith
swbreak
case "chargehitwith"
gosub*event_chargehitwith
swbreak
case "charge"
gosub*event_charge
swbreak
swend
return

*event_playtheme
v=0
ov_setvolume 0, v
ov_bloop 0, 0, 48000.0 * 23.55, -1, -1
return

*event_stoptheme
ov_stop 0
return

*event_fadeouttheme
v2=1
repeat 
v-=v2
if v<=-8000:ov_stop 0:break
ov_setvolume 0,v
v2+=1
if v2>150:v2+=100
wait 2
loop
ov_stop 0
return

*event_playoneshot
found = -1
repeat 50, 101
if _ov_getstatus(cnt) == 0: found = cnt: break
loop
ov_load parameter, found, gf_se
ov_play found
return

*event_girl
ov_load parameter, 3, gf_se
ov_play 3
return

*event_costumed
ov_play 1
v=0
repeat 20
v-=50
ov_setvolume 0, v
wait 10
loop
return

*event_charged
ov_play 2
return

*event_chargestopwith
// chargestopwith makes the girl silent
found = -1
repeat 50, 101
if _ov_getstatus(cnt) == 0: found = cnt: break
loop
ov_load parameter, found, gf_se
ov_play found
ov_stop 2
ov_stop 3
return

*event_chargehitwith
// chargehitwith doesn't make the girl silent
found = -1
repeat 50, 101
if _ov_getstatus(cnt) == 0: found = cnt: break
loop
ov_load parameter, found, gf_se
ov_play found
ov_stop 2
return

*event_charge
level = int(parameter)
if level > 0 {
  pitch = 80 + (level * 4)
  if pitch >=180: pitch = 180
  found = getFreeBassBuffer()
  bs_load "fx\\spell", found, BS_SAMPLE
  bs_setPitch found, pitch
  bs_setvolume found, -2000
  bs_play found
}
if level > 30 {
  pitch = 65 + (level * 4)
  if pitch >=180: pitch = 180
  found = getFreeBassBuffer()
  bs_load "fx\\charge_st2", found, BS_SAMPLE
  bs_setvolume found, -2000
  bs_setPitch found, pitch
  bs_play found
}
return

*event_playoffice
ov_setvolume 4, 0
ov_loop 4
return

*event_fadeoutoffice
v2=1
repeat 
v-=v2
if v<=-8000:ov_stop 0:break
ov_setvolume 0,v
v2+=1
if v2>150:v2+=100
wait 2
loop
ov_stop 0
return

*transferred
dupptr received,lparam,12	//COPYDATASTRUCT構造体。4*3=12バイト
size=lpeek(received,4)	//COPYDATASTRUCT.2を取り出し。サイズ(バイト)
ptr=lpeek(received,8)	//COPYDATASTRUCT.3を取り出し。文字列へのポインタ
dupptr data,ptr,size	//文字列データを入手
final_data=""
sdim final_data,size+1	//領域確保
memcpy final_data,data,size	//ローカルの変数にコピー
transfer=1		//フラグ立て
return 1			//メッセージを処理した場合は1を返す

*exit
ov_finalize
end

*cmdtransfer//多重起動処理
if dir_cmdline="":end//コマンドラインが空だったら何もしない

s=0
bload "hwnd.tmp", s
if s == 0: return
send_content = dir_cmdline
dim cds,3//構造体の作成
cds(0)=0
cds(1)=strlen(send_content)
cds(2)=varptr(send_content)
sendmsg s, 0x004A, hwnd, varptr(cds)		//WM_COPYDATAで中身を送信して
end//消える
